"""
Django settings for pharmatech project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import pymysql
import cloudinary

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-u01b#wqpcprzf&9!iy@i)@=#d52)w@#t1z536j)$$9i@d+zjlp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core.apps.CoreConfig',
    'rest_framework',
    'drf_yasg',
    'oauth2_provider',
    'corsheaders',
    'ckeditor',
    'ckeditor_uploader',
    'cloudinary_storage',
    'cloudinary',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# CORS settings
CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',
    'http://127.0.0.1:3000',
]
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

# OAuth2 Provider settings
OAUTH2_PROVIDER = {
    'SCOPES': {
        'read': 'Read scope',
        'write': 'Write scope',
    },
    'DEFAULT_SCOPES': ['read', 'write'],
    'OAUTH2_BACKEND_CLASS': 'oauth2_provider.oauth2_backends.JSONOAuthLibCore',
    'ACCESS_TOKEN_EXPIRE_SECONDS': 3600,  # 1 hour
    'REFRESH_TOKEN_EXPIRE_SECONDS': 1209600,  # 14 days
}

# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'core.authentication.CustomOAuth2Authentication',
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'core.paginators.ItemPaginator',
    'PAGE_SIZE': 10,
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.MultiPartParser',
        'rest_framework.parsers.FormParser',
    ],
}

# Authentication backends
AUTHENTICATION_BACKENDS = [
    'core.authentication.EmailOrUsernameModelBackend',
    'django.contrib.auth.backends.ModelBackend',
]

# Cloudinary configuration
cloudinary.config(
    cloud_name='dncgine9e',
    api_key='257557947612624',
    api_secret='88EDQ7-Ltwzn1oaI4tT_UIb_bWI',  # Cảnh báo: Chuyển sang .env khi triển khai
    secure=True
)

# Gemini API configuration
GEMINI_API_KEY = 'your-gemini-api-key'  # Thay bằng API key thực tế, cảnh báo: Chuyển sang .env khi triển khai

# Firebase configuration for Realtime Database
FIREBASE_CONFIG = {
    'apiKey': 'your-api-key',  # Thay bằng API key thực tế, cảnh báo: Chuyển sang .env khi triển khai
    'authDomain': 'pharmatech-app.firebaseapp.com',
    'databaseURL': 'https://pharmatech-app.firebaseio.com',
    'projectId': 'pharmatech-app',
    'storageBucket': 'pharmatech-app.appspot.com',
    'messagingSenderId': 'your-messaging-sender-id',  # Thay bằng messagingSenderId thực tế, cảnh báo: Chuyển sang .env khi triển khai
    'appId': 'your-app-id'  # Thay bằng appId thực tế, cảnh báo: Chuyển sang .env khi triển khai
}

# VNPay configuration
VNPAY_TMN_CODE = 'GUPETCYO'  # Cảnh báo: Chuyển sang .env khi triển khai
VNPAY_HASH_SECRET = 'E2G0Y153XRTW37LVRKW8DJ1TGEQ9RK6I'  # Cảnh báo: Chuyển sang .env khi triển khai
VNPAY_URL = 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html'
VNPAY_RETURN_URL = 'https://your-app-domain.com/vnpay/redirect?from=app'

DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage' if not DEBUG else 'django.contrib.staticfiles.storage.StaticFilesStorage'

# CKEditor settings
CKEDITOR_UPLOAD_PATH = "Uploads/"

# Firebase configuration for AI chatbot
SERVICE_ACCOUNT_PATH = os.path.join(
    BASE_DIR, 'core', 'pharmatech-firebase-adminsdk.json'
)

# Email configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'your-email@gmail.com'  # Thay bằng email thực tế, cảnh báo: Chuyển sang .env khi triển khai
EMAIL_HOST_PASSWORD = 'your-app-password'  # Thay bằng app password thực tế, cảnh báo: Chuyển sang .env khi triển khai
DEFAULT_FROM_EMAIL = 'PharmaTech <no-reply@pharmatech.com>'

# OAuth2 Client credentials (to be replaced later)
CLIENT_ID = 'your-client-id'
CLIENT_SECRET = 'your-client-secret'

ROOT_URLCONF = 'pharmatech.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pharmatech.wsgi.application'

# Database configuration
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'pharmadb',
        'USER': 'root',
        'PASSWORD': 'Admin@123',
        'HOST': 'localhost',  # Chỉ rõ localhost
    }
}

# Enable pymysql for MySQL compatibility
pymysql.install_as_MySQLdb()

# Custom user model
AUTH_USER_MODEL = 'core.User'

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Ho_Chi_Minh'  # Phù hợp với Việt Nam
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Logging configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'WARNING',
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['console'],
            'level': 'ERROR',
            'propagate': False,
        },
        'oauth2_provider': {
            'handlers': ['console'],
            'level': 'DEBUG',  # Debug OAuth2 issues
            'propagate': False,
        },
    },
}

# Ghi chú: Khi triển khai production, chuyển các cấu hình nhạy cảm (Cloudinary, Firebase, Gemini, VNPay, Email) sang .env
# Sử dụng python-decouple với các biến: CLOUDINARY_CLOUD_NAME, CLOUDINARY_API_KEY, CLOUDINARY_API_SECRET,
# FIREBASE_API_KEY, GEMINI_API_KEY, VNPAY_TMN_CODE, VNPAY_HASH_SECRET, EMAIL_HOST_USER, EMAIL_HOST_PASSWORD